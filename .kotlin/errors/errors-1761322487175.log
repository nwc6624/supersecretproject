kotlin version: 2.0.20
error message: Incremental compilation failed: Failed to close caches
org.jetbrains.kotlin.incremental.CachesManagerCloseException: Failed to close caches
	at org.jetbrains.kotlin.incremental.BaseCompilationTransaction.closeCachesManager(CompilationTransaction.kt:126)
	at org.jetbrains.kotlin.incremental.RecoverableCompilationTransaction.close(CompilationTransaction.kt:251)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:747)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: java.nio.file.FileSystemException: /var/folders/q5/0qpv93m53nl9wtbpz2p7_nj40000gn/T/kotlin-backups7347977565019778752/2.backup -> /Users/noahcaulfield/Desktop/AR Measure Android/app/build/tmp/kotlin-classes/debug/de/westnordost/streetmeasure/MeasureActivity$onDestroy$1.class: No space left on device
		at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:100)
		at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
		at java.base/sun.nio.fs.UnixFileSystem.move(UnixFileSystem.java:939)
		at java.base/sun.nio.fs.UnixFileSystemProvider.move(UnixFileSystemProvider.java:309)
		at java.base/java.nio.file.Files.move(Files.java:1431)
		at org.jetbrains.kotlin.incremental.RecoverableCompilationTransaction.revertChanges(CompilationTransaction.kt:231)
		at org.jetbrains.kotlin.incremental.RecoverableCompilationTransaction.close(CompilationTransaction.kt:256)
		... 20 more
Caused by: java.nio.file.FileSystemException: /Users/noahcaulfield/Desktop/AR Measure Android/app/build/kotlin/compileDebugKotlin/cacheable/caches-jvm/lookups/counters.tab -> /var/folders/q5/0qpv93m53nl9wtbpz2p7_nj40000gn/T/kotlin-backups7347977565019778752/10.backup: No space left on device
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:100)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)
	at java.base/sun.nio.fs.UnixFileSystem.move(UnixFileSystem.java:939)
	at java.base/sun.nio.fs.UnixFileSystemProvider.move(UnixFileSystemProvider.java:309)
	at java.base/java.nio.file.Files.move(Files.java:1431)
	at org.jetbrains.kotlin.incremental.RecoverableCompilationTransaction.stashFile(CompilationTransaction.kt:210)
	at org.jetbrains.kotlin.incremental.RecoverableCompilationTransaction.registerAddedOrChangedFile(CompilationTransaction.kt:181)
	at org.jetbrains.kotlin.incremental.CompilationTransactionKt.write(CompilationTransaction.kt:55)
	at org.jetbrains.kotlin.incremental.CompilationTransactionKt.writeBytes(CompilationTransaction.kt:64)
	at org.jetbrains.kotlin.incremental.CompilationTransactionKt.writeText(CompilationTransaction.kt:60)
	at org.jetbrains.kotlin.incremental.LookupStorage.close(LookupStorage.kt:151)
	at org.jetbrains.kotlin.com.google.common.io.Closer.close(Closer.java:223)
	at org.jetbrains.kotlin.incremental.IncrementalCachesManager.close(IncrementalCachesManager.kt:55)
	at org.jetbrains.kotlin.incremental.BaseCompilationTransaction.closeCachesManager(CompilationTransaction.kt:123)
	... 21 more


error message: Daemon compilation failed: null
java.lang.Exception
	at org.jetbrains.kotlin.daemon.common.CompileService$CallResult$Error.get(CompileService.kt:69)
	at org.jetbrains.kotlin.daemon.common.CompileService$CallResult$Error.get(CompileService.kt:65)
	at org.jetbrains.kotlin.compilerRunner.GradleKotlinCompilerWork.compileWithDaemon(GradleKotlinCompilerWork.kt:240)
	at org.jetbrains.kotlin.compilerRunner.GradleKotlinCompilerWork.compileWithDaemonOrFallbackImpl(GradleKotlinCompilerWork.kt:159)
	at org.jetbrains.kotlin.compilerRunner.GradleKotlinCompilerWork.run(GradleKotlinCompilerWork.kt:111)
	at org.jetbrains.kotlin.compilerRunner.GradleCompilerRunnerWithWorkers$GradleKotlinCompilerWorkAction.execute(GradleCompilerRunnerWithWorkers.kt:76)
	at org.gradle.workers.internal.DefaultWorkerServer.execute(DefaultWorkerServer.java:63)
	at org.gradle.workers.internal.NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)
	at org.gradle.workers.internal.NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)
	at org.gradle.internal.classloader.ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:100)
	at org.gradle.workers.internal.NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)
	at org.gradle.workers.internal.AbstractWorker$1.call(AbstractWorker.java:44)
	at org.gradle.workers.internal.AbstractWorker$1.call(AbstractWorker.java:41)
	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:210)
	at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:205)
	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:67)
	at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:60)
	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:167)
	at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:60)
	at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:54)
	at org.gradle.workers.internal.AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)
	at org.gradle.workers.internal.NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)
	at org.gradle.workers.internal.DefaultWorkerExecutor.lambda$submitWork$0(DefaultWorkerExecutor.java:174)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:194)
	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:127)
	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:169)
	at org.gradle.internal.Factories$1.create(Factories.java:31)
	at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:263)
	at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:127)
	at org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:132)
	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:164)
	at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:133)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.AbstractManagedExecutor$1.run(AbstractManagedExecutor.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.AssertionError: java.lang.Exception: Could not close incremental caches in /Users/noahcaulfield/Desktop/AR Measure Android/app/build/kotlin/compileDebugKotlin/cacheable/caches-jvm/jvm/kotlin: class-attributes.tab, subtypes.tab, supertypes.tab, class-fq-name-to-source.tab, source-to-classes.tab, proto.tab, constants.tab, package-parts.tab, internal-name-to-source.tab
	at org.jetbrains.kotlin.com.google.common.io.Closer.close(Closer.java:236)
	at org.jetbrains.kotlin.incremental.IncrementalCachesManager.close(IncrementalCachesManager.kt:55)
	at kotlin.io.CloseableKt.closeFinally(Closeable.kt:56)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:293)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:148)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.Exception: Could not close incremental caches in /Users/noahcaulfield/Desktop/AR Measure Android/app/build/kotlin/compileDebugKotlin/cacheable/caches-jvm/jvm/kotlin: class-attributes.tab, subtypes.tab, supertypes.tab, class-fq-name-to-source.tab, source-to-classes.tab, proto.tab, constants.tab, package-parts.tab, internal-name-to-source.tab
	at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:93)
	at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.close(BasicMapsOwner.kt:45)
	at org.jetbrains.kotlin.com.google.common.io.Closer.close(Closer.java:223)
	... 22 more
	Suppressed: java.io.IOException: No space left on device
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
		at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
		at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
		at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
		at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
		at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
		at org.jetbrains.kotlin.incremental.storage.PersistentStorageWrapper.close(PersistentStorage.kt:109)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
		... 24 more
	Suppressed: java.io.IOException: No space left on device
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
		at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
		at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
		at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
		at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
		at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
		at org.jetbrains.kotlin.incremental.storage.AppendableInMemoryStorage.applyChanges(InMemoryStorage.kt:175)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
		at org.jetbrains.kotlin.incremental.storage.AppendableSetBasicMap.close(BasicMap.kt:157)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
		... 24 more
	Suppressed: java.io.IOException: No space left on device
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
		at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
		at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
		at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
		at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
		at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
		at org.jetbrains.kotlin.incremental.storage.AppendableInMemoryStorage.applyChanges(InMemoryStorage.kt:175)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
		at org.jetbrains.kotlin.incremental.storage.AppendableSetBasicMap.close(BasicMap.kt:157)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
		... 24 more
	Suppressed: java.io.IOException: No space left on device
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
		at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
		at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
		at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
		at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
		at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
		at org.jetbrains.kotlin.incremental.storage.PersistentStorageWrapper.close(PersistentStorage.kt:109)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
		... 24 more
	Suppressed: java.io.IOException: No space left on device
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
		at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
		at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
		at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
		at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
		at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
		at org.jetbrains.kotlin.incremental.storage.AppendableInMemoryStorage.applyChanges(InMemoryStorage.kt:175)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
		at org.jetbrains.kotlin.incremental.storage.AppendableSetBasicMap.close(BasicMap.kt:157)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
		... 24 more
	Suppressed: java.io.IOException: No space left on device
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
		at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
		at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
		at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
		at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
		at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
		at org.jetbrains.kotlin.incremental.storage.PersistentStorageWrapper.close(PersistentStorage.kt:109)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
		... 24 more
	Suppressed: java.io.IOException: No space left on device
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
		at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
		at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
		at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
		at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
		at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
		at org.jetbrains.kotlin.incremental.storage.PersistentStorageWrapper.close(PersistentStorage.kt:109)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
		... 24 more
	Suppressed: java.io.IOException: No space left on device
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
		at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
		at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
		at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
		at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
		at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
		at org.jetbrains.kotlin.incremental.storage.PersistentStorageWrapper.close(PersistentStorage.kt:109)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
		... 24 more
	Suppressed: java.io.IOException: No space left on device
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
		at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
		at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
		at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
		at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
		at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
		at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
		at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
		at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
		at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
		at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
		at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
		at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
		at org.jetbrains.kotlin.incremental.storage.AppendableInMemoryStorage.applyChanges(InMemoryStorage.kt:175)
		at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
		at org.jetbrains.kotlin.incremental.storage.PersistentStorageWrapper.close(PersistentStorage.kt:109)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
		... 24 more
	Suppressed: java.lang.Exception: Could not close incremental caches in /Users/noahcaulfield/Desktop/AR Measure Android/app/build/kotlin/compileDebugKotlin/cacheable/caches-jvm/lookups: id-to-file.tab, file-to-id.tab, lookups.tab
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:93)
		at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.close(BasicMapsOwner.kt:45)
		at org.jetbrains.kotlin.incremental.LookupStorage.close(LookupStorage.kt:155)
		... 23 more
		Suppressed: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
			at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
			at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
			at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
			at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
			at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
			at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
			at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
			at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
			at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
			at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
			at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
			at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
			at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
			at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
			at org.jetbrains.kotlin.incremental.storage.PersistentStorageWrapper.close(PersistentStorage.kt:109)
			at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
			at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
			at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
			... 25 more
		Suppressed: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
			at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
			at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
			at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
			at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
			at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
			at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
			at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
			at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
			at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
			at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
			at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
			at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
			at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
			at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
			at org.jetbrains.kotlin.incremental.storage.PersistentStorageWrapper.close(PersistentStorage.kt:109)
			at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
			at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
			at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
			... 25 more
		Suppressed: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
			at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
			at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
			at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
			at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
			at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
			at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
			at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
			at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
			at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
			at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
			at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
			at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
			at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
			at org.jetbrains.kotlin.incremental.storage.AppendableInMemoryStorage.applyChanges(InMemoryStorage.kt:175)
			at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
			at org.jetbrains.kotlin.incremental.storage.AppendableSetBasicMap.close(BasicMap.kt:157)
			at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
			at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
			at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
			... 25 more
	Suppressed: java.lang.Exception: Could not close incremental caches in /Users/noahcaulfield/Desktop/AR Measure Android/app/build/kotlin/compileDebugKotlin/cacheable/caches-jvm/inputs: source-to-output.tab
		... 25 more
		Suppressed: java.io.IOException: No space left on device
			at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite0(Native Method)
			at java.base/sun.nio.ch.UnixFileDispatcherImpl.pwrite(UnixFileDispatcherImpl.java:71)
			at java.base/sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:135)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:102)
			at java.base/sun.nio.ch.IOUtil.write(IOUtil.java:72)
			at java.base/sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:1026)
			at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:1010)
			at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.lambda$write$4(ResilientFileChannel.java:126)
			at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.retryIfInterrupted(FileChannelInterruptsRetryer.java:111)
			at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.write(ResilientFileChannel.java:124)
			at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.lambda$resize$6(PagedFileStorage.java:363)
			at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeOp(StorageLockContext.java:113)
			at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.resize(PagedFileStorage.java:362)
			at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.expand(ResizeableMappedFile.java:118)
			at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.ensureSize(ResizeableMappedFile.java:86)
			at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.putInt(ResizeableMappedFile.java:210)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.markDirty(PersistentEnumeratorBase.java:603)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.<init>(PersistentEnumeratorBase.java:131)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.<init>(PersistentBTreeEnumerator.java:121)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumerator.createDefaultEnumerator(PersistentEnumerator.java:52)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:165)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.<init>(PersistentMapImpl.java:140)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.buildImplementation(PersistentMapBuilder.java:88)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapBuilder.build(PersistentMapBuilder.java:71)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:45)
			at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.<init>(PersistentHashMap.java:71)
			at org.jetbrains.kotlin.incremental.storage.LazyStorage.createMap(LazyStorage.kt:60)
			at org.jetbrains.kotlin.incremental.storage.LazyStorage.getStorageOrCreateNew(LazyStorage.kt:57)
			at org.jetbrains.kotlin.incremental.storage.LazyStorage.set(LazyStorage.kt:78)
			at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.applyChanges(InMemoryStorage.kt:108)
			at org.jetbrains.kotlin.incremental.storage.AppendableInMemoryStorage.applyChanges(InMemoryStorage.kt:175)
			at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.close(InMemoryStorage.kt:136)
			at org.jetbrains.kotlin.incremental.storage.AppendableSetBasicMap.close(BasicMap.kt:157)
			at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
			at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner$close$1.invoke(BasicMapsOwner.kt:45)
			at org.jetbrains.kotlin.incremental.storage.BasicMapsOwner.forEachMapSafe(BasicMapsOwner.kt:85)
			... 24 more


